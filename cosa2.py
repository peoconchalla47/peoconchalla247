import streamlit as st

#Widgets y L√≥gica Principal

st.title("ü§æ‚Äç‚ôÇÔ∏è Simulador de Decisi√≥n Arbitral")
st.subheader("Ingresa la situaci√≥n y Gol-Ego te da la decisi√≥n.")

#Datos de Sanciones y Se√±ales
# Diccionario para mapear la decisi√≥n a la imagen de la se√±al
SE√ëALES = {
    "Golpe Franco": "./assets/senial_golpefranco.png",
    "Exclusi√≥n (2 min)": "./assets/senial_exclusion.png",
    "Lanzamiento de 7 metros": "./assets/senial_7metros.png",
    "Continuar Juego": "./assets/logo_golego.png" # Usamos el logo para 'continuar'
}

#ENTRADAS DEL USUARIO

with st.sidebar:
    st.header("Opciones de Simulaci√≥n")
    
    # Widget 1: Selectbox para la Categor√≠a de la Falta
    tipo_falta = st.selectbox(
        "Categor√≠a de la Falta",
        ["Pasos Ilegales", "Bote Ilegal", "√Årea de 6 metros", "Falta Agresiva"]
    )

st.markdown("---")

#L√ìGICA DE LA APLICACI√ìN

decision = None
regla = None
senial_clave = None

if tipo_falta == "Pasos Ilegales":
    # Widget 2: Slider para el n√∫mero de pasos
    num_pasos = st.slider("¬øCu√°ntos pasos dio el jugador con el bal√≥n en la mano?", 1, 6, 3)
    
    if num_pasos > 3:
        decision = "FALTA: Pasos Ilegales."
        regla = "El reglamento solo permite un m√°ximo de 3 pasos antes o despu√©s de botar."
        senial_clave = "Golpe Franco"
    else:
        decision = "Juego V√°lido."
        regla = "El jugador dio 3 o menos pasos. La jugada puede continuar."
        senial_clave = "Continuar Juego"
        
elif tipo_falta == "Bote Ilegal":
    # Widget 3: Checkbox
    rebote = st.checkbox("¬øEl jugador realiz√≥ un doble bote (bot√≥, agarr√≥ con dos manos y volvi√≥ a botar)?")
    
    if rebote:
        decision = "FALTA: Doble Bote Ilegal."
        regla = "Una vez que el jugador detiene el bote agarrando el bal√≥n con ambas manos, no puede volver a botar. Debe pasar o lanzar."
        senial_clave = "Golpe Franco"
    else:
        decision = "Juego V√°lido."
        regla = "El bote fue reglamentario."
        senial_clave = "Continuar Juego"

elif tipo_falta == "√Årea de 6 metros":
    # Widget 4: Radio para la ubicaci√≥n de la falta
    ubicacion = st.radio(
        "¬øD√≥nde pis√≥ el atacante?",
        ["Fuera del √°rea (v√°lido)", "L√≠nea del √°rea (v√°lido)", "Dentro del √°rea (invasi√≥n)"]
    )
    
    if ubicacion == "Dentro del √°rea (invasi√≥n)":
        decision = "FALTA: Invasi√≥n del √Årea de Porter√≠a."
        regla = "Un jugador de campo no puede pisar el √°rea de 6 metros. El portero es el √∫nico autorizado."
        senial_clave = "Golpe Franco"
    else:
        decision = "Juego V√°lido."
        regla = "Es v√°lido pisar la l√≠nea del √°rea (considerado fuera) o no pisarla."
        senial_clave = "Continuar Juego"

elif tipo_falta == "Falta Agresiva":
    # Widget 5: Selectbox para el nivel de agresi√≥n
    agresion = st.selectbox(
        "Nivel de Contacto",
        ["Forcejeo normal", "Sujeci√≥n/Empuj√≥n repetitivo", "Contacto directo a la cabeza/cuello"]
    )
    
    if agresion == "Contacto directo a la cabeza/cuello":
        decision = "SANCI√ìN GRAVE: Exclusi√≥n."
        regla = "Todo contacto con riesgo de lesi√≥n o falta intencional requiere al menos dos minutos de exclusi√≥n."
        senial_clave = "Exclusi√≥n (2 min)"
    elif agresion == "Sujeci√≥n/Empuj√≥n repetitivo":
        decision = "SANCI√ìN LEVE: Amonestaci√≥n (Tarjeta Amarilla)."
        regla = "Se√±ala una conducta incorrecta que podr√≠a escalar."
        senial_clave = "Golpe Franco" # O se podr√≠a usar una se√±al de amonestaci√≥n si se tuviera la imagen
    else:
        decision = "Juego V√°lido."
        regla = "El forcejeo es parte del juego. No se requiere sanci√≥n."
        senial_clave = "Continuar Juego"


#RESULTADO DE LA APLICACI√ìN
st.markdown("# Resultado y Decisi√≥n")
if decision:
    if "FALTA" in decision or "SANCI√ìN" in decision:
        st.error(f" **DECISI√ìN ARBITRAL:** {decision}")
        st.info(f"**REGLA APLICADA:** {regla}")
    else:
        st.success(f" **DECISI√ìN ARBITRAL:** {decision}")
        st.info(f"**REGLA APLICADA:** {regla}")
        
    st.markdown("---")
    
    st.markdown(f"### Se√±al de Arbitraje: {senial_clave}")
    
    # Muestra la imagen de la se√±al correspondiente
    if senial_clave in SE√ëALES:
        st.image("oip8.jpg", caption=senial_clave, width=250)



